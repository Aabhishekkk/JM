{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Students/AcademicSubjectLevelColumns.ts", "../../../Modules/ServerTypes/Students/AcademicSubjectLevelRow.ts", "../../../Modules/ServerTypes/Students/AcademicSubjectLevelService.ts", "../../../Modules/ServerTypes/Students/InstituteAcademicColumns.ts", "../../../Modules/ServerTypes/Students/InstituteAcademicRow.ts", "../../../Modules/ServerTypes/Students/InstituteAcademicService.ts", "../../../Modules/ServerTypes/Students/PersonalColumns.ts", "../../../Modules/ServerTypes/Students/PersonalRow.ts", "../../../Modules/ServerTypes/Students/PersonalService.ts", "../../../Modules/ServerTypes/Students/ProjectColumns.ts", "../../../Modules/ServerTypes/Students/ProjectRow.ts", "../../../Modules/ServerTypes/Students/ProjectService.ts", "../../../Modules/ServerTypes/Students/SkillsColumns.ts", "../../../Modules/ServerTypes/Students/SkillsRow.ts", "../../../Modules/ServerTypes/Students/SkillsService.ts", "../../../Modules/ServerTypes/Students/TeacherEndorsementColumns.ts", "../../../Modules/ServerTypes/Students/TeacherEndorsementRow.ts", "../../../Modules/ServerTypes/Students/TeacherEndorsementService.ts", "../../../Modules/ServerTypes/Students/AcademicSubjectLevelForm.ts", "../../../Modules/ServerTypes/Students/InstituteAcademicForm.ts", "../../../Modules/ServerTypes/Students/PersonalForm.ts", "../../../Modules/ServerTypes/Students/ProjectForm.ts", "../../../Modules/ServerTypes/Students/SkillsForm.ts", "../../../Modules/ServerTypes/Students/TeacherEndorsementForm.ts"],
  "sourcesContent": ["\uFEFFexport class AcademicSubjectLevelColumns {\r\n    static columnsKey = 'Students.AcademicSubjectLevel';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AcademicSubjectLevelRow {\n    Id?: number;\n    BranchId?: number;\n    AcademicYearId?: number;\n    SemesterId?: number;\n    DivisionId?: number;\n    SubjectId?: number;\n    Month?: number;\n    Year?: number;\n    EStatus?: string;\n    Grade?: string;\n    Percentage?: number;\n    StudentId?: number;\n    BranchName?: string;\n    DivisionName?: string;\n    SubjectName?: string;\n    StudentFirstName?: string;\n}\n\nexport abstract class AcademicSubjectLevelRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'EStatus';\n    static readonly localTextPrefix = 'Students.AcademicSubjectLevel';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<AcademicSubjectLevelRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { AcademicSubjectLevelRow } from \"./AcademicSubjectLevelRow\";\n\nexport namespace AcademicSubjectLevelService {\n    export const baseUrl = 'Students/AcademicSubjectLevel';\n\n    export declare function Create(request: SaveRequest<AcademicSubjectLevelRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AcademicSubjectLevelRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AcademicSubjectLevelRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AcademicSubjectLevelRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Students/AcademicSubjectLevel/Create\",\n        Update: \"Students/AcademicSubjectLevel/Update\",\n        Delete: \"Students/AcademicSubjectLevel/Delete\",\n        Retrieve: \"Students/AcademicSubjectLevel/Retrieve\",\n        List: \"Students/AcademicSubjectLevel/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AcademicSubjectLevelService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class InstituteAcademicColumns {\r\n    static columnsKey = 'Students.InstituteAcademic';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface InstituteAcademicRow {\n    Id?: number;\n    BranchId?: number;\n    AcademicYearId?: number;\n    SemesterId?: number;\n    DivisionId?: number;\n    Month?: number;\n    Year?: number;\n    EStatus?: string;\n    Grade?: string;\n    Percentage?: number;\n    StudentId?: number;\n    BranchName?: string;\n    DivisionName?: string;\n    StudentFirstName?: string;\n}\n\nexport abstract class InstituteAcademicRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'EStatus';\n    static readonly localTextPrefix = 'Students.InstituteAcademic';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<InstituteAcademicRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { InstituteAcademicRow } from \"./InstituteAcademicRow\";\n\nexport namespace InstituteAcademicService {\n    export const baseUrl = 'Students/InstituteAcademic';\n\n    export declare function Create(request: SaveRequest<InstituteAcademicRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<InstituteAcademicRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<InstituteAcademicRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<InstituteAcademicRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Students/InstituteAcademic/Create\",\n        Update: \"Students/InstituteAcademic/Update\",\n        Delete: \"Students/InstituteAcademic/Delete\",\n        Retrieve: \"Students/InstituteAcademic/Retrieve\",\n        List: \"Students/InstituteAcademic/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>InstituteAcademicService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class PersonalColumns {\r\n    static columnsKey = 'Students.Personal';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface PersonalRow {\n    Id?: number;\n    FirstName?: string;\n    LastName?: string;\n    MiddleName?: string;\n    Email?: string;\n    MobileNumber?: number;\n    Pnr?: string;\n    PermanentAddress?: string;\n    City?: string;\n    Pin?: number;\n    CurrentAddress?: string;\n    CurrentCity?: string;\n    Gender?: string;\n    Dob?: string;\n    AdmissionDate?: string;\n    DepartmentId?: number;\n    BranchId?: number;\n    DepartmentName?: string;\n    BranchName?: string;\n}\n\nexport abstract class PersonalRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'FirstName';\n    static readonly localTextPrefix = 'Students.Personal';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<PersonalRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { PersonalRow } from \"./PersonalRow\";\n\nexport namespace PersonalService {\n    export const baseUrl = 'Students/Personal';\n\n    export declare function Create(request: SaveRequest<PersonalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<PersonalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<PersonalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<PersonalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Students/Personal/Create\",\n        Update: \"Students/Personal/Update\",\n        Delete: \"Students/Personal/Delete\",\n        Retrieve: \"Students/Personal/Retrieve\",\n        List: \"Students/Personal/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>PersonalService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class ProjectColumns {\r\n    static columnsKey = 'Students.Project';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ProjectRow {\n    Id?: number;\n    StudentId?: number;\n    Type?: string;\n    ProjectTitle?: string;\n    ProjectDetails?: string;\n    ProjectReport?: string;\n    StudentFirstName?: string;\n}\n\nexport abstract class ProjectRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Type';\n    static readonly localTextPrefix = 'Students.Project';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ProjectRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { ProjectRow } from \"./ProjectRow\";\n\nexport namespace ProjectService {\n    export const baseUrl = 'Students/Project';\n\n    export declare function Create(request: SaveRequest<ProjectRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ProjectRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProjectRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProjectRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Students/Project/Create\",\n        Update: \"Students/Project/Update\",\n        Delete: \"Students/Project/Delete\",\n        Retrieve: \"Students/Project/Retrieve\",\n        List: \"Students/Project/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProjectService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class SkillsColumns {\r\n    static columnsKey = 'Students.Skills';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface SkillsRow {\n    Id?: number;\n    SkillCategory?: string;\n    Rating?: number;\n    AknowledgeBy?: string;\n    Certification?: string;\n    CertificationDetails?: string;\n    StudentId?: number;\n    StudentFirstName?: string;\n}\n\nexport abstract class SkillsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'SkillCategory';\n    static readonly localTextPrefix = 'Students.Skills';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SkillsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { SkillsRow } from \"./SkillsRow\";\n\nexport namespace SkillsService {\n    export const baseUrl = 'Students/Skills';\n\n    export declare function Create(request: SaveRequest<SkillsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<SkillsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SkillsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SkillsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Students/Skills/Create\",\n        Update: \"Students/Skills/Update\",\n        Delete: \"Students/Skills/Delete\",\n        Retrieve: \"Students/Skills/Retrieve\",\n        List: \"Students/Skills/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SkillsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TeacherEndorsementColumns {\r\n    static columnsKey = 'Students.TeacherEndorsement';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TeacherEndorsementRow {\n    Id?: number;\n    TeacherId?: number;\n    StudentId?: number;\n    Title?: string;\n    Details?: string;\n    StudentFirstName?: string;\n}\n\nexport abstract class TeacherEndorsementRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'Students.TeacherEndorsement';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TeacherEndorsementRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TeacherEndorsementRow } from \"./TeacherEndorsementRow\";\n\nexport namespace TeacherEndorsementService {\n    export const baseUrl = 'Students/TeacherEndorsement';\n\n    export declare function Create(request: SaveRequest<TeacherEndorsementRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TeacherEndorsementRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TeacherEndorsementRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TeacherEndorsementRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Students/TeacherEndorsement/Create\",\n        Update: \"Students/TeacherEndorsement/Update\",\n        Delete: \"Students/TeacherEndorsement/Delete\",\n        Retrieve: \"Students/TeacherEndorsement/Retrieve\",\n        List: \"Students/TeacherEndorsement/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TeacherEndorsementService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { IntegerEditor, StringEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AcademicSubjectLevelForm {\n    BranchId: IntegerEditor;\n    AcademicYearId: IntegerEditor;\n    SemesterId: IntegerEditor;\n    DivisionId: IntegerEditor;\n    SubjectId: IntegerEditor;\n    Month: IntegerEditor;\n    Year: IntegerEditor;\n    EStatus: StringEditor;\n    Grade: StringEditor;\n    Percentage: DecimalEditor;\n    StudentId: IntegerEditor;\n}\n\nexport class AcademicSubjectLevelForm extends PrefixedContext {\n    static formKey = 'Students.AcademicSubjectLevel';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AcademicSubjectLevelForm.init)  {\n            AcademicSubjectLevelForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n            var w2 = DecimalEditor;\n\n            initFormType(AcademicSubjectLevelForm, [\n                'BranchId', w0,\n                'AcademicYearId', w0,\n                'SemesterId', w0,\n                'DivisionId', w0,\n                'SubjectId', w0,\n                'Month', w0,\n                'Year', w0,\n                'EStatus', w1,\n                'Grade', w1,\n                'Percentage', w2,\n                'StudentId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { IntegerEditor, StringEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface InstituteAcademicForm {\n    BranchId: IntegerEditor;\n    AcademicYearId: IntegerEditor;\n    SemesterId: IntegerEditor;\n    DivisionId: IntegerEditor;\n    Month: IntegerEditor;\n    Year: IntegerEditor;\n    EStatus: StringEditor;\n    Grade: StringEditor;\n    Percentage: DecimalEditor;\n    StudentId: IntegerEditor;\n}\n\nexport class InstituteAcademicForm extends PrefixedContext {\n    static formKey = 'Students.InstituteAcademic';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!InstituteAcademicForm.init)  {\n            InstituteAcademicForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n            var w2 = DecimalEditor;\n\n            initFormType(InstituteAcademicForm, [\n                'BranchId', w0,\n                'AcademicYearId', w0,\n                'SemesterId', w0,\n                'DivisionId', w0,\n                'Month', w0,\n                'Year', w0,\n                'EStatus', w1,\n                'Grade', w1,\n                'Percentage', w2,\n                'StudentId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface PersonalForm {\n    FirstName: StringEditor;\n    LastName: StringEditor;\n    MiddleName: StringEditor;\n    Email: StringEditor;\n    MobileNumber: IntegerEditor;\n    Pnr: StringEditor;\n    PermanentAddress: StringEditor;\n    City: StringEditor;\n    Pin: IntegerEditor;\n    CurrentAddress: StringEditor;\n    CurrentCity: StringEditor;\n    Gender: StringEditor;\n    Dob: DateEditor;\n    AdmissionDate: DateEditor;\n    DepartmentId: IntegerEditor;\n    BranchId: IntegerEditor;\n}\n\nexport class PersonalForm extends PrefixedContext {\n    static formKey = 'Students.Personal';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!PersonalForm.init)  {\n            PersonalForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n            var w2 = DateEditor;\n\n            initFormType(PersonalForm, [\n                'FirstName', w0,\n                'LastName', w0,\n                'MiddleName', w0,\n                'Email', w0,\n                'MobileNumber', w1,\n                'Pnr', w0,\n                'PermanentAddress', w0,\n                'City', w0,\n                'Pin', w1,\n                'CurrentAddress', w0,\n                'CurrentCity', w0,\n                'Gender', w0,\n                'Dob', w2,\n                'AdmissionDate', w2,\n                'DepartmentId', w1,\n                'BranchId', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ProjectForm {\n    StudentId: IntegerEditor;\n    Type: StringEditor;\n    ProjectTitle: StringEditor;\n    ProjectDetails: StringEditor;\n    ProjectReport: StringEditor;\n}\n\nexport class ProjectForm extends PrefixedContext {\n    static formKey = 'Students.Project';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ProjectForm.init)  {\n            ProjectForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n\n            initFormType(ProjectForm, [\n                'StudentId', w0,\n                'Type', w1,\n                'ProjectTitle', w1,\n                'ProjectDetails', w1,\n                'ProjectReport', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface SkillsForm {\n    SkillCategory: StringEditor;\n    Rating: IntegerEditor;\n    AknowledgeBy: StringEditor;\n    Certification: StringEditor;\n    CertificationDetails: StringEditor;\n    StudentId: IntegerEditor;\n}\n\nexport class SkillsForm extends PrefixedContext {\n    static formKey = 'Students.Skills';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SkillsForm.init)  {\n            SkillsForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n\n            initFormType(SkillsForm, [\n                'SkillCategory', w0,\n                'Rating', w1,\n                'AknowledgeBy', w0,\n                'Certification', w0,\n                'CertificationDetails', w0,\n                'StudentId', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TeacherEndorsementForm {\n    TeacherId: IntegerEditor;\n    StudentId: IntegerEditor;\n    Title: StringEditor;\n    Details: StringEditor;\n}\n\nexport class TeacherEndorsementForm extends PrefixedContext {\n    static formKey = 'Students.TeacherEndorsement';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TeacherEndorsementForm.init)  {\n            TeacherEndorsementForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n\n            initFormType(TeacherEndorsementForm, [\n                'TeacherId', w0,\n                'StudentId', w0,\n                'Title', w1,\n                'Details', w1\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["AcademicSubjectLevelColumns", "__name", "import_q", "AcademicSubjectLevelRow", "__name", "import_q", "AcademicSubjectLevelService", "x", "r", "s", "o", "InstituteAcademicColumns", "__name", "import_q", "InstituteAcademicRow", "__name", "import_q", "InstituteAcademicService", "x", "r", "s", "o", "PersonalColumns", "__name", "import_q", "PersonalRow", "__name", "import_q", "PersonalService", "x", "r", "s", "o", "ProjectColumns", "__name", "import_q", "ProjectRow", "__name", "import_q", "ProjectService", "x", "r", "s", "o", "SkillsColumns", "__name", "import_q", "SkillsRow", "__name", "import_q", "SkillsService", "x", "r", "s", "o", "TeacherEndorsementColumns", "__name", "import_q", "TeacherEndorsementRow", "__name", "import_q", "TeacherEndorsementService", "x", "r", "s", "o", "import_corelib", "import_q", "_AcademicSubjectLevelForm", "prefix", "w0", "w1", "w2", "AcademicSubjectLevelForm", "__name", "import_corelib", "import_q", "_InstituteAcademicForm", "prefix", "w0", "w1", "w2", "InstituteAcademicForm", "__name", "import_corelib", "import_q", "_PersonalForm", "prefix", "w0", "w1", "w2", "PersonalForm", "__name", "import_corelib", "import_q", "_ProjectForm", "prefix", "w0", "w1", "ProjectForm", "__name", "import_corelib", "import_q", "_SkillsForm", "prefix", "w0", "w1", "SkillsForm", "__name", "import_corelib", "import_q", "_TeacherEndorsementForm", "prefix", "w0", "w1", "TeacherEndorsementForm", "__name"]
}
