{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Organisation/AcademicYearsColumns.ts", "../../../Modules/ServerTypes/Organisation/AcademicYearsRow.ts", "../../../Modules/ServerTypes/Organisation/AcademicYearsService.ts", "../../../Modules/ServerTypes/Organisation/BatchesColumns.ts", "../../../Modules/ServerTypes/Organisation/BatchesRow.ts", "../../../Modules/ServerTypes/Organisation/BatchesService.ts", "../../../Modules/ServerTypes/Organisation/BranchesColumns.ts", "../../../Modules/ServerTypes/Organisation/BranchesRow.ts", "../../../Modules/ServerTypes/Organisation/BranchesService.ts", "../../../Modules/ServerTypes/Organisation/DepartmentsColumns.ts", "../../../Modules/ServerTypes/Organisation/DepartmentsRow.ts", "../../../Modules/ServerTypes/Organisation/DepartmentsService.ts", "../../../Modules/ServerTypes/Organisation/DivisionColumns.ts", "../../../Modules/ServerTypes/Organisation/DivisionRow.ts", "../../../Modules/ServerTypes/Organisation/DivisionService.ts", "../../../Modules/ServerTypes/Organisation/GroupColumns.ts", "../../../Modules/ServerTypes/Organisation/GroupRow.ts", "../../../Modules/ServerTypes/Organisation/GroupService.ts", "../../../Modules/ServerTypes/Organisation/InstituteColumns.ts", "../../../Modules/ServerTypes/Organisation/InstituteRow.ts", "../../../Modules/ServerTypes/Organisation/InstituteService.ts", "../../../Modules/ServerTypes/Organisation/SemestersColumns.ts", "../../../Modules/ServerTypes/Organisation/SemestersRow.ts", "../../../Modules/ServerTypes/Organisation/SemestersService.ts", "../../../Modules/ServerTypes/Organisation/AcademicYearsForm.ts", "../../../Modules/ServerTypes/Organisation/BatchesForm.ts", "../../../Modules/ServerTypes/Organisation/BranchesForm.ts", "../../../Modules/ServerTypes/Organisation/DepartmentsForm.ts", "../../../Modules/ServerTypes/Organisation/DivisionForm.ts", "../../../Modules/ServerTypes/Organisation/GroupForm.ts", "../../../Modules/ServerTypes/Organisation/InstituteForm.ts", "../../../Modules/ServerTypes/Organisation/SemestersForm.ts"],
  "sourcesContent": ["\uFEFFexport class AcademicYearsColumns {\r\n    static columnsKey = 'Organisation.AcademicYears';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface AcademicYearsRow {\r\n    Id?: number;\r\n    AcademicYear?: number;\r\n    Index?: number;\r\n}\r\n\r\nexport abstract class AcademicYearsRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly localTextPrefix = 'Organisation.AcademicYears';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<AcademicYearsRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { AcademicYearsRow } from \"./AcademicYearsRow\";\r\n\r\nexport namespace AcademicYearsService {\r\n    export const baseUrl = 'Organisation/AcademicYears';\r\n\r\n    export declare function Create(request: SaveRequest<AcademicYearsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<AcademicYearsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AcademicYearsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AcademicYearsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/AcademicYears/Create\",\r\n        Update: \"Organisation/AcademicYears/Update\",\r\n        Delete: \"Organisation/AcademicYears/Delete\",\r\n        Retrieve: \"Organisation/AcademicYears/Retrieve\",\r\n        List: \"Organisation/AcademicYears/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>AcademicYearsService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class BatchesColumns {\r\n    static columnsKey = 'Organisation.Batches';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface BatchesRow {\r\n    Id?: number;\r\n    DivisionId?: number;\r\n    BatchName?: string;\r\n    DivisionName?: string;\r\n}\r\n\r\nexport abstract class BatchesRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'BatchName';\r\n    static readonly localTextPrefix = 'Organisation.Batches';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<BatchesRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { BatchesRow } from \"./BatchesRow\";\r\n\r\nexport namespace BatchesService {\r\n    export const baseUrl = 'Organisation/Batches';\r\n\r\n    export declare function Create(request: SaveRequest<BatchesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<BatchesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<BatchesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<BatchesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/Batches/Create\",\r\n        Update: \"Organisation/Batches/Update\",\r\n        Delete: \"Organisation/Batches/Delete\",\r\n        Retrieve: \"Organisation/Batches/Retrieve\",\r\n        List: \"Organisation/Batches/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>BatchesService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class BranchesColumns {\r\n    static columnsKey = 'Organisation.Branches';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface BranchesRow {\r\n    Id?: number;\r\n    BranchName?: string;\r\n    BranchCode?: string;\r\n    InstituteId?: number;\r\n    DepartmentId?: number;\r\n    InstituteName?: string;\r\n    DepartmentName?: string;\r\n}\r\n\r\nexport abstract class BranchesRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'BranchName';\r\n    static readonly localTextPrefix = 'Organisation.Branches';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<BranchesRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { BranchesRow } from \"./BranchesRow\";\r\n\r\nexport namespace BranchesService {\r\n    export const baseUrl = 'Organisation/Branches';\r\n\r\n    export declare function Create(request: SaveRequest<BranchesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<BranchesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<BranchesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<BranchesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/Branches/Create\",\r\n        Update: \"Organisation/Branches/Update\",\r\n        Delete: \"Organisation/Branches/Delete\",\r\n        Retrieve: \"Organisation/Branches/Retrieve\",\r\n        List: \"Organisation/Branches/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>BranchesService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class DepartmentsColumns {\r\n    static columnsKey = 'Organisation.Departments';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface DepartmentsRow {\r\n    Id?: number;\r\n    DepartmentName?: string;\r\n}\r\n\r\nexport abstract class DepartmentsRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'DepartmentName';\r\n    static readonly localTextPrefix = 'Organisation.Departments';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<DepartmentsRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { DepartmentsRow } from \"./DepartmentsRow\";\r\n\r\nexport namespace DepartmentsService {\r\n    export const baseUrl = 'Organisation/Departments';\r\n\r\n    export declare function Create(request: SaveRequest<DepartmentsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<DepartmentsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<DepartmentsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<DepartmentsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/Departments/Create\",\r\n        Update: \"Organisation/Departments/Update\",\r\n        Delete: \"Organisation/Departments/Delete\",\r\n        Retrieve: \"Organisation/Departments/Retrieve\",\r\n        List: \"Organisation/Departments/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>DepartmentsService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class DivisionColumns {\r\n    static columnsKey = 'Organisation.Division';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface DivisionRow {\r\n    Id?: number;\r\n    InstituteId?: number;\r\n    BranchId?: number;\r\n    DepartmentId?: number;\r\n    AcademicYearsId?: number;\r\n    SemesterId?: number;\r\n    StartDate?: string;\r\n    EndDate?: string;\r\n    DivisionName?: string;\r\n    InstituteName?: string;\r\n    BranchName?: string;\r\n    DepartmentName?: string;\r\n}\r\n\r\nexport abstract class DivisionRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'DivisionName';\r\n    static readonly localTextPrefix = 'Organisation.Division';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<DivisionRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { DivisionRow } from \"./DivisionRow\";\r\n\r\nexport namespace DivisionService {\r\n    export const baseUrl = 'Organisation/Division';\r\n\r\n    export declare function Create(request: SaveRequest<DivisionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<DivisionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<DivisionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<DivisionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/Division/Create\",\r\n        Update: \"Organisation/Division/Update\",\r\n        Delete: \"Organisation/Division/Delete\",\r\n        Retrieve: \"Organisation/Division/Retrieve\",\r\n        List: \"Organisation/Division/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>DivisionService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class GroupColumns {\r\n    static columnsKey = 'Organisation.Group';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface GroupRow {\r\n    Id?: number;\r\n    BatchId?: number;\r\n    GroupName?: string;\r\n    BatchName?: string;\r\n}\r\n\r\nexport abstract class GroupRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'GroupName';\r\n    static readonly localTextPrefix = 'Organisation.Group';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<GroupRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { GroupRow } from \"./GroupRow\";\r\n\r\nexport namespace GroupService {\r\n    export const baseUrl = 'Organisation/Group';\r\n\r\n    export declare function Create(request: SaveRequest<GroupRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<GroupRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GroupRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GroupRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/Group/Create\",\r\n        Update: \"Organisation/Group/Update\",\r\n        Delete: \"Organisation/Group/Delete\",\r\n        Retrieve: \"Organisation/Group/Retrieve\",\r\n        List: \"Organisation/Group/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>GroupService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class InstituteColumns {\r\n    static columnsKey = 'Organisation.Institute';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface InstituteRow {\r\n    Id?: number;\r\n    InstituteName?: string;\r\n    Description?: string;\r\n}\r\n\r\nexport abstract class InstituteRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'InstituteName';\r\n    static readonly localTextPrefix = 'Organisation.Institute';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<InstituteRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { InstituteRow } from \"./InstituteRow\";\r\n\r\nexport namespace InstituteService {\r\n    export const baseUrl = 'Organisation/Institute';\r\n\r\n    export declare function Create(request: SaveRequest<InstituteRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<InstituteRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<InstituteRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<InstituteRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/Institute/Create\",\r\n        Update: \"Organisation/Institute/Update\",\r\n        Delete: \"Organisation/Institute/Delete\",\r\n        Retrieve: \"Organisation/Institute/Retrieve\",\r\n        List: \"Organisation/Institute/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>InstituteService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class SemestersColumns {\r\n    static columnsKey = 'Organisation.Semesters';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface SemestersRow {\r\n    Id?: number;\r\n    Semester?: number;\r\n    AcademicYearsId?: number;\r\n    Index?: number;\r\n}\r\n\r\nexport abstract class SemestersRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly localTextPrefix = 'Organisation.Semesters';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<SemestersRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { SemestersRow } from \"./SemestersRow\";\r\n\r\nexport namespace SemestersService {\r\n    export const baseUrl = 'Organisation/Semesters';\r\n\r\n    export declare function Create(request: SaveRequest<SemestersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<SemestersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SemestersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SemestersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Organisation/Semesters/Create\",\r\n        Update: \"Organisation/Semesters/Update\",\r\n        Delete: \"Organisation/Semesters/Delete\",\r\n        Retrieve: \"Organisation/Semesters/Retrieve\",\r\n        List: \"Organisation/Semesters/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>SemestersService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface AcademicYearsForm {\r\n    AcademicYear: IntegerEditor;\r\n    Index: IntegerEditor;\r\n}\r\n\r\nexport class AcademicYearsForm extends PrefixedContext {\r\n    static formKey = 'Organisation.AcademicYears';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!AcademicYearsForm.init)  {\r\n            AcademicYearsForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n\r\n            initFormType(AcademicYearsForm, [\r\n                'AcademicYear', w0,\r\n                'Index', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface BatchesForm {\r\n    DivisionId: IntegerEditor;\r\n    BatchName: StringEditor;\r\n}\r\n\r\nexport class BatchesForm extends PrefixedContext {\r\n    static formKey = 'Organisation.Batches';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!BatchesForm.init)  {\r\n            BatchesForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n            var w1 = StringEditor;\r\n\r\n            initFormType(BatchesForm, [\r\n                'DivisionId', w0,\r\n                'BatchName', w1\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { StringEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface BranchesForm {\r\n    BranchName: StringEditor;\r\n    BranchCode: StringEditor;\r\n    InstituteId: IntegerEditor;\r\n    DepartmentId: IntegerEditor;\r\n}\r\n\r\nexport class BranchesForm extends PrefixedContext {\r\n    static formKey = 'Organisation.Branches';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!BranchesForm.init)  {\r\n            BranchesForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n            var w1 = IntegerEditor;\r\n\r\n            initFormType(BranchesForm, [\r\n                'BranchName', w0,\r\n                'BranchCode', w0,\r\n                'InstituteId', w1,\r\n                'DepartmentId', w1\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface DepartmentsForm {\r\n    DepartmentName: StringEditor;\r\n}\r\n\r\nexport class DepartmentsForm extends PrefixedContext {\r\n    static formKey = 'Organisation.Departments';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!DepartmentsForm.init)  {\r\n            DepartmentsForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(DepartmentsForm, [\r\n                'DepartmentName', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { IntegerEditor, DateEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface DivisionForm {\r\n    InstituteId: IntegerEditor;\r\n    BranchId: IntegerEditor;\r\n    DepartmentId: IntegerEditor;\r\n    AcademicYearsId: IntegerEditor;\r\n    SemesterId: IntegerEditor;\r\n    StartDate: DateEditor;\r\n    EndDate: DateEditor;\r\n    DivisionName: StringEditor;\r\n}\r\n\r\nexport class DivisionForm extends PrefixedContext {\r\n    static formKey = 'Organisation.Division';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!DivisionForm.init)  {\r\n            DivisionForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n            var w1 = DateEditor;\r\n            var w2 = StringEditor;\r\n\r\n            initFormType(DivisionForm, [\r\n                'InstituteId', w0,\r\n                'BranchId', w0,\r\n                'DepartmentId', w0,\r\n                'AcademicYearsId', w0,\r\n                'SemesterId', w0,\r\n                'StartDate', w1,\r\n                'EndDate', w1,\r\n                'DivisionName', w2\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface GroupForm {\r\n    BatchId: IntegerEditor;\r\n    GroupName: StringEditor;\r\n}\r\n\r\nexport class GroupForm extends PrefixedContext {\r\n    static formKey = 'Organisation.Group';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!GroupForm.init)  {\r\n            GroupForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n            var w1 = StringEditor;\r\n\r\n            initFormType(GroupForm, [\r\n                'BatchId', w0,\r\n                'GroupName', w1\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface InstituteForm {\r\n    InstituteName: StringEditor;\r\n    Description: StringEditor;\r\n}\r\n\r\nexport class InstituteForm extends PrefixedContext {\r\n    static formKey = 'Organisation.Institute';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!InstituteForm.init)  {\r\n            InstituteForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(InstituteForm, [\r\n                'InstituteName', w0,\r\n                'Description', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface SemestersForm {\r\n    Semester: IntegerEditor;\r\n    AcademicYearsId: IntegerEditor;\r\n    Index: IntegerEditor;\r\n}\r\n\r\nexport class SemestersForm extends PrefixedContext {\r\n    static formKey = 'Organisation.Semesters';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!SemestersForm.init)  {\r\n            SemestersForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n\r\n            initFormType(SemestersForm, [\r\n                'Semester', w0,\r\n                'AcademicYearsId', w0,\r\n                'Index', w0\r\n            ]);\r\n        }\r\n    }\r\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAA2B,CAEnC,EAFcC,EAAAD,EAAA,wBAAAA,EACH,WAAa,6BCDvB,IAAAE,EAA4B,SAQtB,IAAeC,EAAf,KAAgC,CASvC,EATsBC,EAAAD,EAAA,oBAAAA,EACF,WAAa,KADXA,EAEF,gBAAkB,6BAFhBA,EAGF,iBAAmB,yBAHjBA,EAIF,iBAAmB,yBAJjBA,EAKF,eAAiB,yBALfA,EAMF,iBAAmB,yBANjBA,EAQF,UAAS,eAA8B,EChB1D,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,6BAQVA,EAAA,QAAU,CACnB,OAAQ,oCACR,OAAQ,oCACR,OAAQ,oCACR,SAAU,sCACV,KAAM,iCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAsBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAChD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAAqB,CAE7B,EAFcC,EAAAD,EAAA,kBAAAA,EACH,WAAa,uBCDvB,IAAAE,GAA4B,SAStB,IAAeC,EAAf,KAA0B,CAUjC,EAVsBC,EAAAD,EAAA,cAAAA,EACF,WAAa,KADXA,EAEF,aAAe,YAFbA,EAGF,gBAAkB,uBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,gBAAwB,EClBpD,IAAAE,GAAuK,SAGvJC,QACAA,EAAA,QAAU,uBAQVA,EAAA,QAAU,CACnB,OAAQ,8BACR,OAAQ,8BACR,OAAQ,8BACR,SAAU,gCACV,KAAM,2BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAgBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC1C,SAAO,mBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,QAAA,KCHT,IAAMK,EAAN,KAAsB,CAE9B,EAFcC,EAAAD,EAAA,mBAAAA,EACH,WAAa,wBCDvB,IAAAE,GAA4B,SAYtB,IAAeC,EAAf,KAA2B,CAUlC,EAVsBC,EAAAD,EAAA,eAAAA,EACF,WAAa,KADXA,EAEF,aAAe,aAFbA,EAGF,gBAAkB,wBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,gBAAyB,ECrBrD,IAAAE,GAAuK,SAGvJC,QACAA,EAAA,QAAU,wBAQVA,EAAA,QAAU,CACnB,OAAQ,+BACR,OAAQ,+BACR,OAAQ,+BACR,SAAU,iCACV,KAAM,4BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAiBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC3C,SAAO,mBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,QAAA,KCHT,IAAMK,EAAN,KAAyB,CAEjC,EAFcC,EAAAD,EAAA,sBAAAA,EACH,WAAa,2BCDvB,IAAAE,GAA4B,SAOtB,IAAeC,EAAf,KAA8B,CAUrC,EAVsBC,EAAAD,EAAA,kBAAAA,EACF,WAAa,KADXA,EAEF,aAAe,iBAFbA,EAGF,gBAAkB,2BAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,gBAA4B,EChBxD,IAAAE,GAAuK,SAGvJC,QACAA,EAAA,QAAU,2BAQVA,EAAA,QAAU,CACnB,OAAQ,kCACR,OAAQ,kCACR,OAAQ,kCACR,SAAU,oCACV,KAAM,+BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAoBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC9C,SAAO,mBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,QAAA,KCHT,IAAMK,EAAN,KAAsB,CAE9B,EAFcC,EAAAD,EAAA,mBAAAA,EACH,WAAa,wBCDvB,IAAAE,GAA4B,SAiBtB,IAAeC,EAAf,KAA2B,CAUlC,EAVsBC,EAAAD,EAAA,eAAAA,EACF,WAAa,KADXA,EAEF,aAAe,eAFbA,EAGF,gBAAkB,wBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,gBAAyB,EC1BrD,IAAAE,GAAuK,SAGvJC,QACAA,EAAA,QAAU,wBAQVA,EAAA,QAAU,CACnB,OAAQ,+BACR,OAAQ,+BACR,OAAQ,+BACR,SAAU,iCACV,KAAM,4BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAiBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC3C,SAAO,mBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,QAAA,KCHT,IAAMK,EAAN,KAAmB,CAE3B,EAFcC,EAAAD,EAAA,gBAAAA,EACH,WAAa,qBCDvB,IAAAE,GAA4B,SAStB,IAAeC,EAAf,KAAwB,CAU/B,EAVsBC,EAAAD,EAAA,YAAAA,EACF,WAAa,KADXA,EAEF,aAAe,YAFbA,EAGF,gBAAkB,qBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,gBAAsB,EClBlD,IAAAE,GAAuK,SAGvJC,QACAA,EAAA,QAAU,qBAQVA,EAAA,QAAU,CACnB,OAAQ,4BACR,OAAQ,4BACR,OAAQ,4BACR,SAAU,8BACV,KAAM,yBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,mBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,QAAA,KCHT,IAAMK,EAAN,KAAuB,CAE/B,EAFcC,EAAAD,EAAA,oBAAAA,EACH,WAAa,yBCDvB,IAAAE,GAA4B,SAQtB,IAAeC,EAAf,KAA4B,CAUnC,EAVsBC,EAAAD,EAAA,gBAAAA,EACF,WAAa,KADXA,EAEF,aAAe,gBAFbA,EAGF,gBAAkB,yBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,gBAA0B,ECjBtD,IAAAE,GAAuK,SAGvJC,QACAA,EAAA,QAAU,yBAQVA,EAAA,QAAU,CACnB,OAAQ,gCACR,OAAQ,gCACR,OAAQ,gCACR,SAAU,kCACV,KAAM,6BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAkBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC5C,SAAO,mBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,QAAA,KCHT,IAAMK,EAAN,KAAuB,CAE/B,EAFcC,EAAAD,EAAA,oBAAAA,EACH,WAAa,yBCDvB,IAAAE,GAA4B,SAStB,IAAeC,EAAf,KAA4B,CASnC,EATsBC,EAAAD,EAAA,gBAAAA,EACF,WAAa,KADXA,EAEF,gBAAkB,yBAFhBA,EAGF,iBAAmB,yBAHjBA,EAIF,iBAAmB,yBAJjBA,EAKF,eAAiB,yBALfA,EAMF,iBAAmB,yBANjBA,EAQF,UAAS,gBAA0B,ECjBtD,IAAAE,GAAuK,SAGvJC,QACAA,EAAA,QAAU,yBAQVA,EAAA,QAAU,CACnB,OAAQ,gCACR,OAAQ,gCACR,OAAQ,gCACR,SAAU,kCACV,KAAM,6BACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAkBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC5C,SAAO,mBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,QAAA,KCHhB,IAAAK,EAA+C,SAChDC,GAA6B,SAOtB,IAAMC,EAAN,cAAgC,iBAAgB,CAInD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkB,KAAO,CAC1BA,EAAkB,KAAO,GAEzB,IAAIE,EAAK,mBAET,iBAAaF,EAAmB,CAC5B,eAAgBE,EAChB,QAASA,CACb,CAAC,CACL,CACJ,CACJ,EAlBaC,EAANH,EAAMI,EAAAD,EAAA,qBAAAA,EACF,QAAU,6BCTpB,IAAAE,EAA6D,SAC9DC,GAA6B,SAOtB,IAAMC,EAAN,cAA0B,iBAAgB,CAI7C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAY,KAAO,CACpBA,EAAY,KAAO,GAEnB,IAAIE,EAAK,gBACLC,EAAK,kBAET,iBAAaH,EAAa,CACtB,aAAcE,EACd,YAAaC,CACjB,CAAC,CACL,CACJ,CACJ,EAnBaC,EAANJ,EAAMK,EAAAD,EAAA,eAAAA,EACF,QAAU,uBCTpB,IAAAE,EAA6D,SAC9DC,GAA6B,SAStB,IAAMC,EAAN,cAA2B,iBAAgB,CAI9C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAa,KAAO,CACrBA,EAAa,KAAO,GAEpB,IAAIE,EAAK,eACLC,EAAK,mBAET,iBAAaH,EAAc,CACvB,aAAcE,EACd,aAAcA,EACd,cAAeC,EACf,eAAgBA,CACpB,CAAC,CACL,CACJ,CACJ,EArBaC,EAANJ,EAAMK,EAAAD,EAAA,gBAAAA,EACF,QAAU,wBCXpB,IAAAE,EAA8C,SAC/CC,GAA6B,SAMtB,IAAMC,EAAN,cAA8B,iBAAgB,CAIjD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAgB,KAAO,CACxBA,EAAgB,KAAO,GAEvB,IAAIE,EAAK,kBAET,iBAAaF,EAAiB,CAC1B,iBAAkBE,CACtB,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,mBAAAA,EACF,QAAU,2BCRpB,IAAAE,EAAyE,SAC1EC,GAA6B,SAatB,IAAMC,EAAN,cAA2B,iBAAgB,CAI9C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAa,KAAO,CACrBA,EAAa,KAAO,GAEpB,IAAIE,EAAK,gBACLC,EAAK,aACLC,EAAK,kBAET,iBAAaJ,EAAc,CACvB,cAAeE,EACf,WAAYA,EACZ,eAAgBA,EAChB,kBAAmBA,EACnB,aAAcA,EACd,YAAaC,EACb,UAAWA,EACX,eAAgBC,CACpB,CAAC,CACL,CACJ,CACJ,EA1BaC,EAANL,EAAMM,EAAAD,EAAA,gBAAAA,EACF,QAAU,wBCfpB,IAAAE,EAA6D,SAC9DC,GAA6B,SAOtB,IAAMC,EAAN,cAAwB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,gBACLC,EAAK,kBAET,iBAAaH,EAAW,CACpB,UAAWE,EACX,YAAaC,CACjB,CAAC,CACL,CACJ,CACJ,EAnBaC,EAANJ,EAAMK,EAAAD,EAAA,aAAAA,EACF,QAAU,qBCTpB,IAAAE,EAA8C,SAC/CC,GAA6B,SAOtB,IAAMC,EAAN,cAA4B,iBAAgB,CAI/C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAc,KAAO,CACtBA,EAAc,KAAO,GAErB,IAAIE,EAAK,kBAET,iBAAaF,EAAe,CACxB,gBAAiBE,EACjB,cAAeA,CACnB,CAAC,CACL,CACJ,CACJ,EAlBaC,EAANH,EAAMI,EAAAD,EAAA,iBAAAA,EACF,QAAU,yBCTpB,IAAAE,EAA+C,SAChDC,GAA6B,SAQtB,IAAMC,EAAN,cAA4B,iBAAgB,CAI/C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAc,KAAO,CACtBA,EAAc,KAAO,GAErB,IAAIE,EAAK,mBAET,iBAAaF,EAAe,CACxB,WAAYE,EACZ,kBAAmBA,EACnB,QAASA,CACb,CAAC,CACL,CACJ,CACJ,EAnBaC,EAANH,EAAMI,EAAAD,EAAA,iBAAAA,EACF,QAAU",
  "names": ["AcademicYearsColumns", "__name", "import_q", "AcademicYearsRow", "__name", "import_q", "AcademicYearsService", "x", "r", "s", "o", "BatchesColumns", "__name", "import_q", "BatchesRow", "__name", "import_q", "BatchesService", "x", "r", "s", "o", "BranchesColumns", "__name", "import_q", "BranchesRow", "__name", "import_q", "BranchesService", "x", "r", "s", "o", "DepartmentsColumns", "__name", "import_q", "DepartmentsRow", "__name", "import_q", "DepartmentsService", "x", "r", "s", "o", "DivisionColumns", "__name", "import_q", "DivisionRow", "__name", "import_q", "DivisionService", "x", "r", "s", "o", "GroupColumns", "__name", "import_q", "GroupRow", "__name", "import_q", "GroupService", "x", "r", "s", "o", "InstituteColumns", "__name", "import_q", "InstituteRow", "__name", "import_q", "InstituteService", "x", "r", "s", "o", "SemestersColumns", "__name", "import_q", "SemestersRow", "__name", "import_q", "SemestersService", "x", "r", "s", "o", "import_corelib", "import_q", "_AcademicYearsForm", "prefix", "w0", "AcademicYearsForm", "__name", "import_corelib", "import_q", "_BatchesForm", "prefix", "w0", "w1", "BatchesForm", "__name", "import_corelib", "import_q", "_BranchesForm", "prefix", "w0", "w1", "BranchesForm", "__name", "import_corelib", "import_q", "_DepartmentsForm", "prefix", "w0", "DepartmentsForm", "__name", "import_corelib", "import_q", "_DivisionForm", "prefix", "w0", "w1", "w2", "DivisionForm", "__name", "import_corelib", "import_q", "_GroupForm", "prefix", "w0", "w1", "GroupForm", "__name", "import_corelib", "import_q", "_InstituteForm", "prefix", "w0", "InstituteForm", "__name", "import_corelib", "import_q", "_SemestersForm", "prefix", "w0", "SemestersForm", "__name"]
}
