{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Syllabus/ChaptersColumns.ts", "../../../Modules/ServerTypes/Syllabus/ChaptersRow.ts", "../../../Modules/ServerTypes/Syllabus/ChaptersService.ts", "../../../Modules/ServerTypes/Syllabus/SubjectsColumns.ts", "../../../Modules/ServerTypes/Syllabus/SubjectsRow.ts", "../../../Modules/ServerTypes/Syllabus/SubjectsService.ts", "../../../Modules/ServerTypes/Syllabus/TopicsColumns.ts", "../../../Modules/ServerTypes/Syllabus/TopicsRow.ts", "../../../Modules/ServerTypes/Syllabus/TopicsService.ts", "../../../Modules/ServerTypes/Syllabus/ChaptersForm.ts", "../../../Modules/ServerTypes/Syllabus/SubjectsForm.ts", "../../../Modules/ServerTypes/Syllabus/TopicsForm.ts"],
  "sourcesContent": ["\uFEFFexport class ChaptersColumns {\r\n    static columnsKey = 'Syllabus.Chapters';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ChaptersRow {\n    Id?: number;\n    SubjectId?: number;\n    ChapterName?: string;\n    Description?: string;\n    Index?: number;\n    SubjectName?: string;\n}\n\nexport abstract class ChaptersRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'ChapterName';\n    static readonly localTextPrefix = 'Syllabus.Chapters';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ChaptersRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { ChaptersRow } from \"./ChaptersRow\";\n\nexport namespace ChaptersService {\n    export const baseUrl = 'Syllabus/Chapters';\n\n    export declare function Create(request: SaveRequest<ChaptersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ChaptersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ChaptersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ChaptersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Syllabus/Chapters/Create\",\n        Update: \"Syllabus/Chapters/Update\",\n        Delete: \"Syllabus/Chapters/Delete\",\n        Retrieve: \"Syllabus/Chapters/Retrieve\",\n        List: \"Syllabus/Chapters/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ChaptersService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class SubjectsColumns {\r\n    static columnsKey = 'Syllabus.Subjects';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface SubjectsRow {\n    Id?: number;\n    SubjectName?: string;\n    BranchId?: number;\n    AcademicYearId?: number;\n    SemesterId?: number;\n    Priority?: string;\n    BranchName?: string;\n}\n\nexport abstract class SubjectsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'SubjectName';\n    static readonly localTextPrefix = 'Syllabus.Subjects';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SubjectsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { SubjectsRow } from \"./SubjectsRow\";\n\nexport namespace SubjectsService {\n    export const baseUrl = 'Syllabus/Subjects';\n\n    export declare function Create(request: SaveRequest<SubjectsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<SubjectsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SubjectsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SubjectsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Syllabus/Subjects/Create\",\n        Update: \"Syllabus/Subjects/Update\",\n        Delete: \"Syllabus/Subjects/Delete\",\n        Retrieve: \"Syllabus/Subjects/Retrieve\",\n        List: \"Syllabus/Subjects/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SubjectsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TopicsColumns {\r\n    static columnsKey = 'Syllabus.Topics';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TopicsRow {\n    Id?: number;\n    SubjectId?: number;\n    ChapterId?: number;\n    TopicName?: string;\n    Description?: string;\n    Index?: number;\n    SubjectName?: string;\n    ChapterName?: string;\n}\n\nexport abstract class TopicsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'TopicName';\n    static readonly localTextPrefix = 'Syllabus.Topics';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TopicsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TopicsRow } from \"./TopicsRow\";\n\nexport namespace TopicsService {\n    export const baseUrl = 'Syllabus/Topics';\n\n    export declare function Create(request: SaveRequest<TopicsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TopicsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TopicsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TopicsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Syllabus/Topics/Create\",\n        Update: \"Syllabus/Topics/Update\",\n        Delete: \"Syllabus/Topics/Delete\",\n        Retrieve: \"Syllabus/Topics/Retrieve\",\n        List: \"Syllabus/Topics/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TopicsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ChaptersForm {\n    SubjectId: IntegerEditor;\n    ChapterName: StringEditor;\n    Description: StringEditor;\n    Index: IntegerEditor;\n}\n\nexport class ChaptersForm extends PrefixedContext {\n    static formKey = 'Syllabus.Chapters';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ChaptersForm.init)  {\n            ChaptersForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n\n            initFormType(ChaptersForm, [\n                'SubjectId', w0,\n                'ChapterName', w1,\n                'Description', w1,\n                'Index', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface SubjectsForm {\n    SubjectName: StringEditor;\n    BranchId: IntegerEditor;\n    AcademicYearId: IntegerEditor;\n    SemesterId: IntegerEditor;\n    Priority: StringEditor;\n}\n\nexport class SubjectsForm extends PrefixedContext {\n    static formKey = 'Syllabus.Subjects';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SubjectsForm.init)  {\n            SubjectsForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n\n            initFormType(SubjectsForm, [\n                'SubjectName', w0,\n                'BranchId', w1,\n                'AcademicYearId', w1,\n                'SemesterId', w1,\n                'Priority', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TopicsForm {\n    SubjectId: IntegerEditor;\n    ChapterId: IntegerEditor;\n    TopicName: StringEditor;\n    Description: StringEditor;\n    Index: IntegerEditor;\n}\n\nexport class TopicsForm extends PrefixedContext {\n    static formKey = 'Syllabus.Topics';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TopicsForm.init)  {\n            TopicsForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n\n            initFormType(TopicsForm, [\n                'SubjectId', w0,\n                'ChapterId', w0,\n                'TopicName', w1,\n                'Description', w1,\n                'Index', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["ChaptersColumns", "__name", "import_q", "ChaptersRow", "__name", "import_q", "ChaptersService", "x", "r", "s", "o", "SubjectsColumns", "__name", "import_q", "SubjectsRow", "__name", "import_q", "SubjectsService", "x", "r", "s", "o", "TopicsColumns", "__name", "import_q", "TopicsRow", "__name", "import_q", "TopicsService", "x", "r", "s", "o", "import_corelib", "import_q", "_ChaptersForm", "prefix", "w0", "w1", "ChaptersForm", "__name", "import_corelib", "import_q", "_SubjectsForm", "prefix", "w0", "w1", "SubjectsForm", "__name", "import_corelib", "import_q", "_TopicsForm", "prefix", "w0", "w1", "TopicsForm", "__name"]
}
