{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Master/SkillsColumns.ts", "../../../Modules/ServerTypes/Master/SkillsRow.ts", "../../../Modules/ServerTypes/Master/SkillsService.ts", "../../../Modules/ServerTypes/Master/StatesColumns.ts", "../../../Modules/ServerTypes/Master/StatesRow.ts", "../../../Modules/ServerTypes/Master/StatesService.ts", "../../../Modules/ServerTypes/Master/SkillsForm.ts", "../../../Modules/ServerTypes/Master/StatesForm.ts"],
  "sourcesContent": ["\uFEFFexport class SkillsColumns {\r\n    static columnsKey = 'Master.Skills';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface SkillsRow {\n    Id?: number;\n    Name?: string;\n}\n\nexport abstract class SkillsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.Skills';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<SkillsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { SkillsRow } from \"./SkillsRow\";\n\nexport namespace SkillsService {\n    export const baseUrl = 'Master/Skills';\n\n    export declare function Create(request: SaveRequest<SkillsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<SkillsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SkillsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SkillsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/Skills/Create\",\n        Update: \"Master/Skills/Update\",\n        Delete: \"Master/Skills/Delete\",\n        Retrieve: \"Master/Skills/Retrieve\",\n        List: \"Master/Skills/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SkillsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class StatesColumns {\r\n    static columnsKey = 'Master.States';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface StatesRow {\n    Id?: number;\n    Name?: string;\n}\n\nexport abstract class StatesRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.States';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<StatesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { StatesRow } from \"./StatesRow\";\n\nexport namespace StatesService {\n    export const baseUrl = 'Master/States';\n\n    export declare function Create(request: SaveRequest<StatesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<StatesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<StatesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<StatesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/States/Create\",\n        Update: \"Master/States/Update\",\n        Delete: \"Master/States/Delete\",\n        Retrieve: \"Master/States/Retrieve\",\n        List: \"Master/States/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>StatesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface SkillsForm {\n    Name: StringEditor;\n}\n\nexport class SkillsForm extends PrefixedContext {\n    static formKey = 'Master.Skills';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SkillsForm.init)  {\n            SkillsForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(SkillsForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface StatesForm {\n    Name: StringEditor;\n}\n\nexport class StatesForm extends PrefixedContext {\n    static formKey = 'Master.States';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!StatesForm.init)  {\n            StatesForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(StatesForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAAoB,CAE5B,EAFcC,EAAAD,EAAA,iBAAAA,EACH,WAAa,gBCDvB,IAAAE,EAA4B,SAOtB,IAAeC,EAAf,KAAyB,CAUhC,EAVsBC,EAAAD,EAAA,aAAAA,EACF,WAAa,KADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAuB,EChBnD,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAeC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACzC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAAoB,CAE5B,EAFcC,EAAAD,EAAA,iBAAAA,EACH,WAAa,gBCDvB,IAAAE,EAA4B,SAOtB,IAAeC,EAAf,KAAyB,CAUhC,EAVsBC,EAAAD,EAAA,aAAAA,EACF,WAAa,KADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAuB,EChBnD,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAeC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACzC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA8C,SAC/CC,EAA6B,SAMtB,IAAMC,EAAN,cAAyB,iBAAgB,CAI5C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAW,KAAO,CACnBA,EAAW,KAAO,GAElB,IAAIE,EAAK,kBAET,gBAAaF,EAAY,CACrB,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,cAAAA,EACF,QAAU,gBCRpB,IAAAE,EAA8C,SAC/CC,EAA6B,SAMtB,IAAMC,EAAN,cAAyB,iBAAgB,CAI5C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAW,KAAO,CACnBA,EAAW,KAAO,GAElB,IAAIE,EAAK,kBAET,gBAAaF,EAAY,CACrB,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,cAAAA,EACF,QAAU",
  "names": ["SkillsColumns", "__name", "import_q", "SkillsRow", "__name", "import_q", "SkillsService", "x", "r", "s", "o", "StatesColumns", "__name", "import_q", "StatesRow", "__name", "import_q", "StatesService", "x", "r", "s", "o", "import_corelib", "import_q", "_SkillsForm", "prefix", "w0", "SkillsForm", "__name", "import_corelib", "import_q", "_StatesForm", "prefix", "w0", "StatesForm", "__name"]
}
