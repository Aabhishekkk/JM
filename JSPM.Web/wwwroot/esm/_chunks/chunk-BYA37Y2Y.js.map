{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Master/SkillsColumns.ts", "../../../Modules/ServerTypes/Master/SkillsRow.ts", "../../../Modules/ServerTypes/Master/SkillsService.ts", "../../../Modules/ServerTypes/Master/StatesColumns.ts", "../../../Modules/ServerTypes/Master/StatesRow.ts", "../../../Modules/ServerTypes/Master/StatesService.ts", "../../../Modules/ServerTypes/Master/SkillsForm.ts", "../../../Modules/ServerTypes/Master/StatesForm.ts"],
  "sourcesContent": ["\uFEFFexport class SkillsColumns {\r\n    static columnsKey = 'Master.Skills';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface SkillsRow {\r\n    Id?: number;\r\n    Name?: string;\r\n}\r\n\r\nexport abstract class SkillsRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'Name';\r\n    static readonly localTextPrefix = 'Master.Skills';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<SkillsRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { SkillsRow } from \"./SkillsRow\";\r\n\r\nexport namespace SkillsService {\r\n    export const baseUrl = 'Master/Skills';\r\n\r\n    export declare function Create(request: SaveRequest<SkillsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<SkillsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SkillsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SkillsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Master/Skills/Create\",\r\n        Update: \"Master/Skills/Update\",\r\n        Delete: \"Master/Skills/Delete\",\r\n        Retrieve: \"Master/Skills/Retrieve\",\r\n        List: \"Master/Skills/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>SkillsService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class StatesColumns {\r\n    static columnsKey = 'Master.States';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface StatesRow {\r\n    Id?: number;\r\n    Name?: string;\r\n}\r\n\r\nexport abstract class StatesRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'Name';\r\n    static readonly localTextPrefix = 'Master.States';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<StatesRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { StatesRow } from \"./StatesRow\";\r\n\r\nexport namespace StatesService {\r\n    export const baseUrl = 'Master/States';\r\n\r\n    export declare function Create(request: SaveRequest<StatesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<StatesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<StatesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<StatesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Master/States/Create\",\r\n        Update: \"Master/States/Update\",\r\n        Delete: \"Master/States/Delete\",\r\n        Retrieve: \"Master/States/Retrieve\",\r\n        List: \"Master/States/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>StatesService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface SkillsForm {\r\n    Name: StringEditor;\r\n}\r\n\r\nexport class SkillsForm extends PrefixedContext {\r\n    static formKey = 'Master.Skills';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!SkillsForm.init)  {\r\n            SkillsForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(SkillsForm, [\r\n                'Name', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface StatesForm {\r\n    Name: StringEditor;\r\n}\r\n\r\nexport class StatesForm extends PrefixedContext {\r\n    static formKey = 'Master.States';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!StatesForm.init)  {\r\n            StatesForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(StatesForm, [\r\n                'Name', w0\r\n            ]);\r\n        }\r\n    }\r\n}"],
  "mappings": "6DAAQ,IAAMA,EAAN,KAAoB,CAE5B,EAFcC,EAAAD,EAAA,iBAAAA,EACH,WAAa,gBCDvB,IAAAE,EAA4B,SAOtB,IAAeC,EAAf,KAAyB,CAUhC,EAVsBC,EAAAD,EAAA,aAAAA,EACF,WAAa,KADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAuB,EChBnD,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAeC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACzC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHT,IAAMK,EAAN,KAAoB,CAE5B,EAFcC,EAAAD,EAAA,iBAAAA,EACH,WAAa,gBCDvB,IAAAE,EAA4B,SAOtB,IAAeC,EAAf,KAAyB,CAUhC,EAVsBC,EAAAD,EAAA,aAAAA,EACF,WAAa,KADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAuB,EChBnD,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAeC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACzC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAA8C,SAC/CC,EAA6B,SAMtB,IAAMC,EAAN,cAAyB,iBAAgB,CAI5C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAW,KAAO,CACnBA,EAAW,KAAO,GAElB,IAAIE,EAAK,kBAET,gBAAaF,EAAY,CACrB,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,cAAAA,EACF,QAAU,gBCRpB,IAAAE,EAA8C,SAC/CC,EAA6B,SAMtB,IAAMC,EAAN,cAAyB,iBAAgB,CAI5C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAW,KAAO,CACnBA,EAAW,KAAO,GAElB,IAAIE,EAAK,kBAET,gBAAaF,EAAY,CACrB,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,cAAAA,EACF,QAAU",
  "names": ["SkillsColumns", "__name", "import_q", "SkillsRow", "__name", "import_q", "SkillsService", "x", "r", "s", "o", "StatesColumns", "__name", "import_q", "StatesRow", "__name", "import_q", "StatesService", "x", "r", "s", "o", "import_corelib", "import_q", "_SkillsForm", "prefix", "w0", "SkillsForm", "__name", "import_corelib", "import_q", "_StatesForm", "prefix", "w0", "StatesForm", "__name"]
}
