{
  "version": 3,
  "sources": ["../../../../../Modules/Organisation/Institute/InstitutePage.ts", "../../../../../Modules/Organisation/Institute/InstituteGrid.ts", "../../../../../Modules/Organisation/Institute/InstituteDialog.ts", "../../../../../Modules/Organisation/Institute/InstituteExcelImportDialog.ts", "../../../../../Modules/ServerTypes/Institute/InstituteExcelImportForm.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { InstituteGrid } from './InstituteGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new InstituteGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { InstituteColumns, InstituteRow, InstituteService } from '../../ServerTypes/Organisation';\r\nimport { InstituteDialog } from './InstituteDialog';\r\nimport { InstituteExcelImportDialog } from './InstituteExcelImportDialog';\r\n\r\n@Decorators.registerClass('JSPM.Organisation.InstituteGrid')\r\nexport class InstituteGrid extends EntityGrid<InstituteRow, any> {\r\n    protected getColumnsKey() { return InstituteColumns.columnsKey; }\r\n    protected getDialogType() { return InstituteDialog; }\r\n    protected getRowDefinition() { return InstituteRow; }\r\n    protected getService() { return InstituteService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n    protected getButtons() {\r\n        var buttons = super.getButtons();\r\n        buttons.push({\r\n            title: 'Import From Excel',\r\n            cssClass: 'export-xlsx-button',\r\n            onClick: () => {\r\n                // open import dialog, let it handle rest\r\n                var dialog = new InstituteExcelImportDialog();\r\n                dialog.element.on('dialogclose', () => {\r\n                    this.refresh();\r\n                    dialog = null;\r\n                });\r\n                dialog.dialogOpen();\r\n            },\r\n            separator: true\r\n        });\r\n        return buttons;\r\n    }\r\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { InstituteForm, InstituteRow, InstituteService } from '../../ServerTypes/Organisation';\r\n\r\n@Decorators.registerClass('JSPM.Organisation.InstituteDialog')\r\nexport class InstituteDialog extends EntityDialog<InstituteRow, any> {\r\n    protected getFormKey() { return InstituteForm.formKey; }\r\n    protected getRowDefinition() { return InstituteRow; }\r\n    protected getService() { return InstituteService.baseUrl; }\r\n\r\n    protected form = new InstituteForm(this.idPrefix);\r\n}", "import { Decorators, EditorUtils, PropertyDialog } from '@serenity-is/corelib';\r\nimport { DialogButton, Authorization, isEmptyOrNull, notifyError, notifyInfo }\r\n    from '@serenity-is/corelib/q';\r\nimport { InstituteExcelImportForm} from\r\n    '../../ServerTypes/Institute';\r\nimport { InstituteService } from '../../ServerTypes/Organisation/InstituteService';\r\n@Decorators.registerClass('JSPM.Institute.InstituteExcelImportDialog')\r\nexport class InstituteExcelImportDialog extends PropertyDialog<any, any>{\r\n    protected getFormKey() { return InstituteExcelImportForm.formKey; }\r\n    protected form = new InstituteExcelImportForm(this.idPrefix);\r\n    constructor() {\r\n        super();\r\n        this.form = new InstituteExcelImportForm(this.idPrefix);\r\n    }\r\n    protected getDialogTitle(): string {\r\n        return \"Excel Import\";\r\n    }\r\n    protected getDialogButtons(): DialogButton[] {\r\n        return [\r\n            {\r\n                text: 'Import',\r\n                click: () => {\r\n                    /*debugger;*/\r\n                    if (!this.validateBeforeSave())\r\n                        return;\r\n                    if (this.form.FileName.value == null ||\r\n                        isEmptyOrNull(this.form.FileName.value.Filename)) {\r\n                        notifyError(\"Please select a file!\");\r\n                        return;\r\n                    }\r\n                    InstituteService.ExcelImport({\r\n                        FileName: this.form.FileName.value.Filename,\r\n                    }, response => {\r\n                        notifyInfo(\r\n                            'Inserted: ' + (response.Inserted || 0));\r\n                        if (response.ErrorList != null &&\r\n                            response.ErrorList.length > 0) {\r\n                            notifyError(response.ErrorList.join(',\\r\\n '));\r\n                        }\r\n                        this.dialogClose();\r\n                    });\r\n                },\r\n            },\r\n            {\r\n                text: 'Cancel',\r\n                click: () => this.dialogClose()\r\n            }\r\n        ];\r\n    }\r\n}", "\uFEFFimport { ImageUploadEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface InstituteExcelImportForm {\r\n    FileName: ImageUploadEditor;\r\n}\r\n\r\nexport class InstituteExcelImportForm extends PrefixedContext {\r\n    static formKey = 'Institute.InstituteExcelImport';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!InstituteExcelImportForm.init)  {\r\n            InstituteExcelImportForm.init = true;\r\n\r\n            var w0 = ImageUploadEditor;\r\n\r\n            initFormType(InstituteExcelImportForm, [\r\n                'FileName', w0\r\n            ]);\r\n        }\r\n    }\r\n}"],
  "mappings": "+JAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAtC,IAAAC,EAAyC,SAInC,IAAMC,EAAN,cAA8B,cAAgC,CAA9D,kCAKH,KAAU,KAAO,IAAIC,EAAc,KAAK,QAAQ,EAJtC,YAAa,CAAE,OAAOA,EAAc,OAAS,CAC7C,kBAAmB,CAAE,OAAOC,CAAc,CAC1C,YAAa,CAAE,OAAOC,EAAiB,OAAS,CAG9D,EANaC,EAAAJ,EAAA,mBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,mCAAmC,GAChDL,GCJb,IAAAM,EAAwD,SACxDC,EACS,SCFR,IAAAC,EAAmD,SACpDC,EAA6B,SAMtB,IAAMC,EAAN,cAAuC,iBAAgB,CAI1D,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAyB,KAAO,CACjCA,EAAyB,KAAO,GAEhC,IAAIE,EAAK,uBAET,gBAAaF,EAA0B,CACnC,WAAYE,CAChB,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,4BAAAA,EACF,QAAU,iCDDd,IAAME,EAAN,cAAyC,gBAAwB,CAGpE,aAAc,CACV,MAAM,EAFV,KAAU,KAAO,IAAIC,EAAyB,KAAK,QAAQ,EAGvD,KAAK,KAAO,IAAIA,EAAyB,KAAK,QAAQ,CAC1D,CALU,YAAa,CAAE,OAAOA,EAAyB,OAAS,CAMxD,gBAAyB,CAC/B,MAAO,cACX,CACU,kBAAmC,CACzC,MAAO,CACH,CACI,KAAM,SACN,MAAO,IAAM,CAET,GAAK,KAAK,mBAAmB,EAE7B,IAAI,KAAK,KAAK,SAAS,OAAS,SAC5B,iBAAc,KAAK,KAAK,SAAS,MAAM,QAAQ,EAAG,IAClD,eAAY,uBAAuB,EACnC,MACJ,CACAC,EAAiB,YAAY,CACzB,SAAU,KAAK,KAAK,SAAS,MAAM,QACvC,EAAGC,GAAY,IACX,cACI,cAAgBA,EAAS,UAAY,EAAE,EACvCA,EAAS,WAAa,MACtBA,EAAS,UAAU,OAAS,MAC5B,eAAYA,EAAS,UAAU,KAAK;AAAA,EAAQ,CAAC,EAEjD,KAAK,YAAY,CACrB,CAAC,EACL,CACJ,EACA,CACI,KAAM,SACN,MAAO,IAAM,KAAK,YAAY,CAClC,CACJ,CACJ,CACJ,EA1CaC,EAAAJ,EAAA,8BAAAA,EAANK,EAAA,CADN,aAAW,cAAc,2CAA2C,GACxDL,GFDN,IAAMM,EAAN,cAA4B,YAA8B,CACnD,eAAgB,CAAE,OAAOC,EAAiB,UAAY,CACtD,eAAgB,CAAE,OAAOC,CAAiB,CAC1C,kBAAmB,CAAE,OAAOC,CAAc,CAC1C,YAAa,CAAE,OAAOC,EAAiB,OAAS,CAE1D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACU,YAAa,CACnB,IAAIC,EAAU,MAAM,WAAW,EAC/B,OAAAA,EAAQ,KAAK,CACT,MAAO,oBACP,SAAU,qBACV,QAAS,IAAM,CAEX,IAAIC,EAAS,IAAIC,EACjBD,EAAO,QAAQ,GAAG,cAAe,IAAM,CACnC,KAAK,QAAQ,EACbA,EAAS,IACb,CAAC,EACDA,EAAO,WAAW,CACtB,EACA,UAAW,EACf,CAAC,EACMD,CACX,CACJ,EA3BaG,EAAAT,EAAA,iBAAAA,EAANU,EAAA,CADN,aAAW,cAAc,iCAAiC,GAC9CV,GDHE,SAARW,GAA4B,IAC/B,0BAAuB,IAAIC,EAAc,EAAE,UAAU,CAAC,EAAE,OAAO,CACnE,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "InstituteDialog", "InstituteForm", "InstituteRow", "InstituteService", "__name", "__decorateClass", "import_corelib", "import_q", "import_corelib", "import_q", "_InstituteExcelImportForm", "prefix", "w0", "InstituteExcelImportForm", "__name", "InstituteExcelImportDialog", "InstituteExcelImportForm", "InstituteService", "response", "__name", "__decorateClass", "InstituteGrid", "InstituteColumns", "InstituteDialog", "InstituteRow", "InstituteService", "container", "buttons", "dialog", "InstituteExcelImportDialog", "__name", "__decorateClass", "pageInit", "InstituteGrid", "__name"]
}
