{
  "version": 3,
  "sources": ["../../../../../Modules/Organisation/Branches/BranchesPage.ts", "../../../../../Modules/Organisation/Branches/BranchesGrid.ts", "../../../../../Modules/Organisation/Branches/BranchesDialog.ts", "../../../../../Modules/Organisation/Branches/BranchesExcelImportDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { BranchesGrid } from './BranchesGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new BranchesGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { BranchesColumns, BranchesRow, BranchesService } from '../../ServerTypes/Organisation';\r\nimport { BranchesDialog } from './BranchesDialog';\r\nimport { BranchesExcelImportDialog } from './BranchesExcelImportDialog';\r\n\r\n@Decorators.registerClass('JSPM.Organisation.BranchesGrid')\r\nexport class BranchesGrid extends EntityGrid<BranchesRow, any> {\r\n    protected getColumnsKey() { return BranchesColumns.columnsKey; }\r\n    protected getDialogType() { return BranchesDialog; }\r\n    protected getRowDefinition() { return BranchesRow; }\r\n    protected getService() { return BranchesService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n    protected getButtons() {\r\n        var buttons = super.getButtons();\r\n        buttons.push({\r\n            title: 'Import From Excel',\r\n            cssClass: 'export-xlsx-button',\r\n            onClick: () => {\r\n                // open import dialog, let it handle rest\r\n                var dialog = new BranchesExcelImportDialog();\r\n                dialog.element.on('dialogclose', () => {\r\n                    this.refresh();\r\n                    dialog = null;\r\n                });\r\n                dialog.dialogOpen();\r\n            },\r\n            separator: true\r\n        });\r\n        return buttons;\r\n    }\r\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { BranchesForm, BranchesRow, BranchesService } from '../../ServerTypes/Organisation';\r\n\r\n@Decorators.registerClass('JSPM.Organisation.BranchesDialog')\r\nexport class BranchesDialog extends EntityDialog<BranchesRow, any> {\r\n    protected getFormKey() { return BranchesForm.formKey; }\r\n    protected getRowDefinition() { return BranchesRow; }\r\n    protected getService() { return BranchesService.baseUrl; }\r\n\r\n    protected form = new BranchesForm(this.idPrefix);\r\n}", "import { Decorators, EditorUtils, PropertyDialog } from '@serenity-is/corelib';\r\nimport { DialogButton, Authorization, isEmptyOrNull, notifyError, notifyInfo }\r\n    from '@serenity-is/corelib/q';\r\nimport { BranchesExcelImportForm, BranchesService } from\r\n    '../../ServerTypes/Organisation';\r\n\r\n@Decorators.registerClass('JSPM.Braches.BranchesExcelImportDialog')\r\nexport class BranchesExcelImportDialog extends PropertyDialog<any, any>{\r\n    protected getFormKey() { return BranchesExcelImportForm.formKey; }\r\n    protected form = new BranchesExcelImportForm(this.idPrefix);\r\n    constructor() {\r\n        super();\r\n        this.form = new BranchesExcelImportForm(this.idPrefix);\r\n    }\r\n    protected getDialogTitle(): string {\r\n        return \"Excel Import\";\r\n    }\r\n    protected getDialogButtons(): DialogButton[] {\r\n        return [\r\n            {\r\n                text: 'Import',\r\n                click: () => {\r\n                    /*debugger;*/\r\n                    if (!this.validateBeforeSave())\r\n                        return;\r\n                    if (this.form.FileName.value == null ||\r\n                        isEmptyOrNull(this.form.FileName.value.Filename)) {\r\n                        notifyError(\"Please select a file!\");\r\n                        return;\r\n                    }\r\n                    BranchesService.ExcelImport({\r\n                        FileName: this.form.FileName.value.Filename,\r\n                    }, response => {\r\n                        notifyInfo(\r\n                            'Inserted: ' + (response.Inserted || 0));\r\n                        if (response.ErrorList != null &&\r\n                            response.ErrorList.length > 0) {\r\n                            notifyError(response.ErrorList.join(',\\r\\n '));\r\n                        }\r\n                        this.dialogClose();\r\n                    });\r\n                },\r\n            },\r\n            {\r\n                text: 'Cancel',\r\n                click: () => this.dialogClose()\r\n            }\r\n        ];\r\n    }\r\n}"],
  "mappings": "sKAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAtC,IAAAC,EAAyC,SAInC,IAAMC,EAAN,cAA6B,cAA+B,CAA5D,kCAKH,KAAU,KAAO,IAAIC,EAAa,KAAK,QAAQ,EAJrC,YAAa,CAAE,OAAOA,EAAa,OAAS,CAC5C,kBAAmB,CAAE,OAAOC,CAAa,CACzC,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAG7D,EANaC,EAAAJ,EAAA,kBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,kCAAkC,GAC/CL,GCJb,IAAAM,EAAwD,SACxDC,EACS,SAKF,IAAMC,EAAN,cAAwC,gBAAwB,CAGnE,aAAc,CACV,MAAM,EAFV,KAAU,KAAO,IAAIC,EAAwB,KAAK,QAAQ,EAGtD,KAAK,KAAO,IAAIA,EAAwB,KAAK,QAAQ,CACzD,CALU,YAAa,CAAE,OAAOA,EAAwB,OAAS,CAMvD,gBAAyB,CAC/B,MAAO,cACX,CACU,kBAAmC,CACzC,MAAO,CACH,CACI,KAAM,SACN,MAAO,IAAM,CAET,GAAK,KAAK,mBAAmB,EAE7B,IAAI,KAAK,KAAK,SAAS,OAAS,SAC5B,iBAAc,KAAK,KAAK,SAAS,MAAM,QAAQ,EAAG,IAClD,eAAY,uBAAuB,EACnC,MACJ,CACAC,EAAgB,YAAY,CACxB,SAAU,KAAK,KAAK,SAAS,MAAM,QACvC,EAAGC,GAAY,IACX,cACI,cAAgBA,EAAS,UAAY,EAAE,EACvCA,EAAS,WAAa,MACtBA,EAAS,UAAU,OAAS,MAC5B,eAAYA,EAAS,UAAU,KAAK;AAAA,EAAQ,CAAC,EAEjD,KAAK,YAAY,CACrB,CAAC,EACL,CACJ,EACA,CACI,KAAM,SACN,MAAO,IAAM,KAAK,YAAY,CAClC,CACJ,CACJ,CACJ,EA1CaC,EAAAJ,EAAA,6BAAAA,EAANK,EAAA,CADN,aAAW,cAAc,wCAAwC,GACrDL,GFDN,IAAMM,EAAN,cAA2B,YAA6B,CACjD,eAAgB,CAAE,OAAOC,EAAgB,UAAY,CACrD,eAAgB,CAAE,OAAOC,CAAgB,CACzC,kBAAmB,CAAE,OAAOC,CAAa,CACzC,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAEzD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACU,YAAa,CACnB,IAAIC,EAAU,MAAM,WAAW,EAC/B,OAAAA,EAAQ,KAAK,CACT,MAAO,oBACP,SAAU,qBACV,QAAS,IAAM,CAEX,IAAIC,EAAS,IAAIC,EACjBD,EAAO,QAAQ,GAAG,cAAe,IAAM,CACnC,KAAK,QAAQ,EACbA,EAAS,IACb,CAAC,EACDA,EAAO,WAAW,CACtB,EACA,UAAW,EACf,CAAC,EACMD,CACX,CACJ,EA3BaG,EAAAT,EAAA,gBAAAA,EAANU,EAAA,CADN,aAAW,cAAc,gCAAgC,GAC7CV,GDHE,SAARW,GAA4B,IAC/B,0BAAuB,IAAIC,EAAa,EAAE,UAAU,CAAC,EAAE,OAAO,CAClE,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "BranchesDialog", "BranchesForm", "BranchesRow", "BranchesService", "__name", "__decorateClass", "import_corelib", "import_q", "BranchesExcelImportDialog", "BranchesExcelImportForm", "BranchesService", "response", "__name", "__decorateClass", "BranchesGrid", "BranchesColumns", "BranchesDialog", "BranchesRow", "BranchesService", "container", "buttons", "dialog", "BranchesExcelImportDialog", "__name", "__decorateClass", "pageInit", "BranchesGrid", "__name"]
}
