{
  "version": 3,
  "sources": ["../../../../../Modules/Students/TeacherEndorsement/TeacherEndorsementPage.ts", "../../../../../Modules/Students/TeacherEndorsement/TeacherEndorsementGrid.ts", "../../../../../Modules/Students/TeacherEndorsement/TeacherEndorsementDialog.ts", "../../../../../Modules/Students/TeacherEndorsement/TeacherEndorsementExcelImportDialog.ts", "../../../../../Modules/ServerTypes/TeacherEndorsement/TeacherEndorsementExcelImportForm.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { TeacherEndorsementGrid } from './TeacherEndorsementGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new TeacherEndorsementGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { TeacherEndorsementColumns, TeacherEndorsementRow, TeacherEndorsementService } from '../../ServerTypes/Students';\r\nimport { TeacherEndorsementDialog } from './TeacherEndorsementDialog';\r\nimport { TeacherEndorsementExcelImportDialog } from './TeacherEndorsementExcelImportDialog';\r\n\r\n@Decorators.registerClass('JSPM.Students.TeacherEndorsementGrid')\r\nexport class TeacherEndorsementGrid extends EntityGrid<TeacherEndorsementRow, any> {\r\n    protected getColumnsKey() { return TeacherEndorsementColumns.columnsKey; }\r\n    protected getDialogType() { return TeacherEndorsementDialog; }\r\n    protected getRowDefinition() { return TeacherEndorsementRow; }\r\n    protected getService() { return TeacherEndorsementService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\n    protected getButtons() {\r\n        var buttons = super.getButtons();\r\n        buttons.push({\r\n            title: 'Import From Excel',\r\n            cssClass: 'export-xlsx-button',\r\n            onClick: () => {\r\n                // open import dialog, let it handle rest\r\n                var dialog = new TeacherEndorsementExcelImportDialog();\r\n                dialog.element.on('dialogclose', () => {\r\n                    this.refresh();\r\n                    dialog = null;\r\n                });\r\n                dialog.dialogOpen();\r\n            },\r\n            separator: true\r\n        });\r\n        return buttons;\r\n    }\r\n\r\n\r\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { TeacherEndorsementForm, TeacherEndorsementRow, TeacherEndorsementService } from '../../ServerTypes/Students';\r\n\r\n@Decorators.registerClass('JSPM.Students.TeacherEndorsementDialog')\r\nexport class TeacherEndorsementDialog extends EntityDialog<TeacherEndorsementRow, any> {\r\n    protected getFormKey() { return TeacherEndorsementForm.formKey; }\r\n    protected getRowDefinition() { return TeacherEndorsementRow; }\r\n    protected getService() { return TeacherEndorsementService.baseUrl; }\r\n\r\n    protected form = new TeacherEndorsementForm(this.idPrefix);\r\n}", "import { Decorators, EditorUtils, PropertyDialog } from '@serenity-is/corelib';\r\nimport { DialogButton, Authorization, isEmptyOrNull, notifyError, notifyInfo }\r\n    from '@serenity-is/corelib/q';\r\nimport { TeacherEndorsementExcelImportForm } from '../../ServerTypes/TeacherEndorsement';\r\nimport { TeacherEndorsementService } from '../../ServerTypes/Students/TeacherEndorsementService';\r\n@Decorators.registerClass('JSPM.TeacherEndorsement.TeacherEndorsementExcelImportDialog')\r\nexport class TeacherEndorsementExcelImportDialog extends PropertyDialog<any, any>{\r\n    protected getFormKey() { return TeacherEndorsementExcelImportForm.formKey; }\r\n    protected form = new TeacherEndorsementExcelImportForm(this.idPrefix);\r\n    constructor() {\r\n        super();\r\n        this.form = new TeacherEndorsementExcelImportForm(this.idPrefix);\r\n    }\r\n    protected getDialogTitle(): string {\r\n        return \"Excel Import\";\r\n    }\r\n    protected getDialogButtons(): DialogButton[] {\r\n        return [\r\n            {\r\n                text: 'Import',\r\n                click: () => {\r\n                    debugger;\r\n                    if (!this.validateBeforeSave())\r\n                        return;\r\n                    if (this.form.FileName.value == null ||\r\n                        isEmptyOrNull(this.form.FileName.value.Filename)) {\r\n                        notifyError(\"Please select a file!\");\r\n                        return;\r\n                    }\r\n                    /*TeacherEndorsementService.ExcelImport({\r\n                        FileName: this.form.FileName.value.Filename,\r\n                    }, response => {\r\n                        notifyInfo(\r\n                            'Inserted: ' + (response.Inserted || 0));\r\n                        if (response.ErrorList != null &&\r\n                            response.ErrorList.length > 0) {\r\n                            notifyError(response.ErrorList.join(',\\r\\n '));\r\n                        }\r\n                        this.dialogClose();\r\n                    });*/\r\n                },\r\n            },\r\n            {\r\n                text: 'Cancel',\r\n                click: () => this.dialogClose()\r\n            }\r\n        ];\r\n    }\r\n}", "\uFEFFimport { ImageUploadEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TeacherEndorsementExcelImportForm {\n    FileName: ImageUploadEditor;\n}\n\nexport class TeacherEndorsementExcelImportForm extends PrefixedContext {\n    static formKey = 'TeacherEndorsement.TeacherEndorsementExcelImport';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TeacherEndorsementExcelImportForm.init)  {\n            TeacherEndorsementExcelImportForm.init = true;\n\n            var w0 = ImageUploadEditor;\n\n            initFormType(TeacherEndorsementExcelImportForm, [\n                'FileName', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "0JAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAtC,IAAAC,EAAyC,SAInC,IAAMC,EAAN,cAAuC,cAAyC,CAAhF,kCAKH,KAAU,KAAO,IAAIC,EAAuB,KAAK,QAAQ,EAJ/C,YAAa,CAAE,OAAOA,EAAuB,OAAS,CACtD,kBAAmB,CAAE,OAAOC,CAAuB,CACnD,YAAa,CAAE,OAAOC,EAA0B,OAAS,CAGvE,EANaC,EAAAJ,EAAA,4BAAAA,EAANK,EAAA,CADN,aAAW,cAAc,wCAAwC,GACrDL,GCJb,IAAAM,EAAwD,SACxDC,EACS,SCFR,IAAAC,EAAmD,SACpDC,EAA6B,SAMtB,IAAMC,EAAN,cAAgD,iBAAgB,CAInE,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkC,KAAO,CAC1CA,EAAkC,KAAO,GAEzC,IAAIE,EAAK,uBAET,gBAAaF,EAAmC,CAC5C,WAAYE,CAChB,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,qCAAAA,EACF,QAAU,mDDFd,IAAME,EAAN,cAAkD,gBAAwB,CAG7E,aAAc,CACV,MAAM,EAFV,KAAU,KAAO,IAAIC,EAAkC,KAAK,QAAQ,EAGhE,KAAK,KAAO,IAAIA,EAAkC,KAAK,QAAQ,CACnE,CALU,YAAa,CAAE,OAAOA,EAAkC,OAAS,CAMjE,gBAAyB,CAC/B,MAAO,cACX,CACU,kBAAmC,CACzC,MAAO,CACH,CACI,KAAM,SACN,MAAO,IAAM,CACT,SACA,GAAK,KAAK,mBAAmB,IAEzB,KAAK,KAAK,SAAS,OAAS,SAC5B,iBAAc,KAAK,KAAK,SAAS,MAAM,QAAQ,GAAG,IAClD,eAAY,uBAAuB,EACnC,MACJ,CAYJ,CACJ,EACA,CACI,KAAM,SACN,MAAO,IAAM,KAAK,YAAY,CAClC,CACJ,CACJ,CACJ,EA1CaC,EAAAF,EAAA,uCAAAA,EAANG,EAAA,CADN,aAAW,cAAc,6DAA6D,GAC1EH,GFAN,IAAMI,EAAN,cAAqC,YAAuC,CACrE,eAAgB,CAAE,OAAOC,EAA0B,UAAY,CAC/D,eAAgB,CAAE,OAAOC,CAA0B,CACnD,kBAAmB,CAAE,OAAOC,CAAuB,CACnD,YAAa,CAAE,OAAOC,EAA0B,OAAS,CAEnE,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACU,YAAa,CACnB,IAAIC,EAAU,MAAM,WAAW,EAC/B,OAAAA,EAAQ,KAAK,CACT,MAAO,oBACP,SAAU,qBACV,QAAS,IAAM,CAEX,IAAIC,EAAS,IAAIC,EACjBD,EAAO,QAAQ,GAAG,cAAe,IAAM,CACnC,KAAK,QAAQ,EACbA,EAAS,IACb,CAAC,EACDA,EAAO,WAAW,CACtB,EACA,UAAW,EACf,CAAC,EACMD,CACX,CAGJ,EA7BaG,EAAAT,EAAA,0BAAAA,EAANU,EAAA,CADN,aAAW,cAAc,sCAAsC,GACnDV,GDHE,SAARW,GAA4B,IAC/B,0BAAuB,IAAIC,EAAuB,EAAE,UAAU,CAAC,EAAE,OAAO,CAC5E,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "TeacherEndorsementDialog", "TeacherEndorsementForm", "TeacherEndorsementRow", "TeacherEndorsementService", "__name", "__decorateClass", "import_corelib", "import_q", "import_corelib", "import_q", "_TeacherEndorsementExcelImportForm", "prefix", "w0", "TeacherEndorsementExcelImportForm", "__name", "TeacherEndorsementExcelImportDialog", "TeacherEndorsementExcelImportForm", "__name", "__decorateClass", "TeacherEndorsementGrid", "TeacherEndorsementColumns", "TeacherEndorsementDialog", "TeacherEndorsementRow", "TeacherEndorsementService", "container", "buttons", "dialog", "TeacherEndorsementExcelImportDialog", "__name", "__decorateClass", "pageInit", "TeacherEndorsementGrid", "__name"]
}
